Index: src/UI/Display.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/UI/Display.java b/src/UI/Display.java
--- a/src/UI/Display.java	
+++ b/src/UI/Display.java	
@@ -25,6 +25,7 @@
         }
 
     }
+
     private void DisplayGrid(int []target, int [] ocean){
         String targetDeco = "===== TARGET GRID =====\n" +
                 "A B C D E F G H I J \n" +
Index: src/Grid/Grid.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/Grid/Grid.java b/src/Grid/Grid.java
--- a/src/Grid/Grid.java	
+++ b/src/Grid/Grid.java	
@@ -53,6 +53,12 @@
         return new GridIterator(rowList);
     }
 
+    Iterator iterator = createIterator();
+
+
+
+
+
         /*public int getDistance (GridCell a, GridCell b){
             int columDelta = abs(a.GetColumnIndex() - b.GetColumnIndex());
             int rowDelta = abs(a.GetRowIndex() - b.GetRowIndex());
Index: src/Grid/GridIterator.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/Grid/GridIterator.java b/src/Grid/GridIterator.java
--- a/src/Grid/GridIterator.java	
+++ b/src/Grid/GridIterator.java	
@@ -12,9 +12,8 @@
     }
 
     public GridCell next() {
-        GridCell gridCell = rowList.get(position);
         position++;
-        return gridCell;
+        return rowList.get(position);
     }
 
     public boolean hasNext() {
Index: src/Grid/GridCell.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/Grid/GridCell.java b/src/Grid/GridCell.java
--- a/src/Grid/GridCell.java	
+++ b/src/Grid/GridCell.java	
@@ -1,6 +1,7 @@
 package Grid;
 
 import Boats.Boat;
+import Exceptions.IllegalShotException;
 import org.apache.avro.JsonProperties;
 
 public class GridCell {
@@ -9,10 +10,10 @@
 
     //know if cell has a boat on it
     public Boat t;
-    private boolean wasShot = false;
+    private boolean wasShot = true;
 
     //know if boat is on it
-    private boolean isOccupied = false;
+    private boolean isOccupied = true;
 
     public boolean isOccupied() {
         return isOccupied;
@@ -23,10 +24,6 @@
     }
     public void isShot(){
         if (WasShot()){
-            if (t!= null){
-                t.isHit();
-            }
-
         }
     }
 
